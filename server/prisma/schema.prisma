generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserType {
  Guest
  Teacher
  Admin
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  email     String   @unique
  type      UserType @default(Guest)
  password  String

  @@unique(name: "fullName", [firstName, lastName])
}

model Student {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  gradeId   String   @map("grade_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  grade Grade @relation(fields: [gradeId], references: [id])

  @@unique(name: "fullName", [firstName, lastName])
}

model Grade {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  year    Int
  section String
  levelId String @map("level_id") @db.ObjectId

  level      Level        @relation(fields: [levelId], references: [id])
  student    Student[]
  assistance Assistance[]

  @@unique([year, section, levelId])
}

model Level {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  grade Grade[]
}

model Eda {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  number   Int
  start    DateTime
  end      DateTime
  holydays DateTime[]

  assistance Assistance[]
}

model Assistance {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  edaId   String @map("eda_id") @db.ObjectId
  gradeId String @map("grade_id") @db.ObjectId

  eda   Eda   @relation(fields: [edaId], references: [id])
  grade Grade @relation(fields: [gradeId], references: [id])
}
